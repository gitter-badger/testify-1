items:
- uid: Testify.ActualValue`1
  id: ActualValue`1
  parent: Testify
  children:
  - Testify.ActualValue`1.#ctor(`0)
  - Testify.ActualValue`1.Value
  langs:
  - csharp
  - vb
  name: ActualValue<T>
  name.vb: ActualValue(Of T)
  fullName: Testify.ActualValue<T>
  fullName.vb: Testify.ActualValue(Of T)
  type: Class
  source:
    remote:
      path: src/Testify/ActualValue{T}.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/ActualValue{T}.cs
    startLine: 8
  assemblies:
  - Testify
  namespace: Testify
  summary: Represents the actual value in an assertion statement.
  example: []
  syntax:
    content: public sealed class ActualValue<T>
    content.vb: Public NotInheritable Class ActualValue(Of T)
    typeParameters:
    - id: T
      description: The type of the actual value.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Testify.ActualValue`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Testify.ActualValue`1
  langs:
  - csharp
  - vb
  name: ActualValue(T)
  fullName: Testify.ActualValue<T>.ActualValue(T)
  fullName.vb: Testify.ActualValue(Of T).ActualValue(T)
  type: Constructor
  source:
    remote:
      path: src/Testify/ActualValue{T}.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/ActualValue{T}.cs
    startLine: 15
  assemblies:
  - Testify
  namespace: Testify
  summary: Initializes a new instance of the <xref href="Testify.ActualValue`1" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ActualValue(T value)
    content.vb: Public Sub New(value As T)
    parameters:
    - id: value
      type: '{T}'
      description: The actual value.
- uid: Testify.ActualValue`1.Value
  id: Value
  parent: Testify.ActualValue`1
  langs:
  - csharp
  - vb
  name: Value
  fullName: Testify.ActualValue<T>.Value
  fullName.vb: Testify.ActualValue(Of T).Value
  type: Property
  source:
    remote:
      path: src/Testify/ActualValue{T}.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/ActualValue{T}.cs
    startLine: 26
  assemblies:
  - Testify
  namespace: Testify
  summary: Gets the actual value.
  example: []
  syntax:
    content: public T Value { get; }
    content.vb: Public ReadOnly Property Value As T
    parameters: []
    return:
      type: '{T}'
references:
- uid: Testify
  isExternal: false
  name: Testify
  fullName: Testify
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Testify.ActualValue`1
  parent: Testify
  isExternal: false
  name: ActualValue<T>
  fullName: Testify.ActualValue<T>
  fullname.vb: Testify.ActualValue(Of T)
  name.vb: ActualValue(Of T)
  spec.csharp:
  - uid: Testify.ActualValue`1
    name: ActualValue
    fullName: Testify.ActualValue
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Testify.ActualValue`1
    name: ActualValue
    fullName: Testify.ActualValue
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
