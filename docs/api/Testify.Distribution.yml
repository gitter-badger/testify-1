items:
- uid: Testify.Distribution
  id: Distribution
  parent: Testify
  children:
  - Testify.Distribution.InvertedNormal
  - Testify.Distribution.NegativeNormal
  - Testify.Distribution.NextDouble(System.Random)
  - Testify.Distribution.NextGausian(System.Random)
  - Testify.Distribution.NextGausian(System.Random,System.Int32)
  - Testify.Distribution.PositiveNormal
  - Testify.Distribution.Uniform
  langs:
  - csharp
  - vb
  name: Distribution
  fullName: Testify.Distribution
  type: Class
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 7
  assemblies:
  - Testify
  namespace: Testify
  summary: Provides random number generation using a specified distribution algorithm.
  example: []
  syntax:
    content: public abstract class Distribution
    content.vb: Public MustInherit Class Distribution
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Testify.Distribution.InvertedNormal
  id: InvertedNormal
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: InvertedNormal
  fullName: Testify.Distribution.InvertedNormal
  type: Property
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 16
  assemblies:
  - Testify
  namespace: Testify
  summary: Gets a <xref href="Testify.Distribution" data-throw-if-not-resolved="false"></xref> that uses an inverted normal distribution algorithm.
  example: []
  syntax:
    content: public static Distribution InvertedNormal { get; }
    content.vb: Public Shared ReadOnly Property InvertedNormal As Distribution
    parameters: []
    return:
      type: Testify.Distribution
- uid: Testify.Distribution.NegativeNormal
  id: NegativeNormal
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: NegativeNormal
  fullName: Testify.Distribution.NegativeNormal
  type: Property
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 21
  assemblies:
  - Testify
  namespace: Testify
  summary: Gets a <xref href="Testify.Distribution" data-throw-if-not-resolved="false"></xref> that uses a negative normal distribution algorithm.
  example: []
  syntax:
    content: public static Distribution NegativeNormal { get; }
    content.vb: Public Shared ReadOnly Property NegativeNormal As Distribution
    parameters: []
    return:
      type: Testify.Distribution
- uid: Testify.Distribution.PositiveNormal
  id: PositiveNormal
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: PositiveNormal
  fullName: Testify.Distribution.PositiveNormal
  type: Property
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 26
  assemblies:
  - Testify
  namespace: Testify
  summary: Gets a <xref href="Testify.Distribution" data-throw-if-not-resolved="false"></xref> that uses a positive normal distribution algorithm.
  example: []
  syntax:
    content: public static Distribution PositiveNormal { get; }
    content.vb: Public Shared ReadOnly Property PositiveNormal As Distribution
    parameters: []
    return:
      type: Testify.Distribution
- uid: Testify.Distribution.Uniform
  id: Uniform
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: Uniform
  fullName: Testify.Distribution.Uniform
  type: Property
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 31
  assemblies:
  - Testify
  namespace: Testify
  summary: Gets a <xref href="Testify.Distribution" data-throw-if-not-resolved="false"></xref> that uses an uniform distribution algorithm.
  example: []
  syntax:
    content: public static Distribution Uniform { get; }
    content.vb: Public Shared ReadOnly Property Uniform As Distribution
    parameters: []
    return:
      type: Testify.Distribution
- uid: Testify.Distribution.NextDouble(System.Random)
  id: NextDouble(System.Random)
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: NextDouble(Random)
  fullName: Testify.Distribution.NextDouble(System.Random)
  type: Method
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 38
  assemblies:
  - Testify
  namespace: Testify
  summary: Get the next double in the random distribution.
  example: []
  syntax:
    content: public abstract double NextDouble(Random random)
    content.vb: Public MustOverride Function NextDouble(random As Random) As Double
    parameters:
    - id: random
      type: System.Random
      description: The random number generator to use.
    return:
      type: System.Double
      description: The next double in the random distribution.
- uid: Testify.Distribution.NextGausian(System.Random)
  id: NextGausian(System.Random)
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: NextGausian(Random)
  fullName: Testify.Distribution.NextGausian(System.Random)
  type: Method
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 45
  assemblies:
  - Testify
  namespace: Testify
  summary: Get the next double in the Gaussian distribution.
  example: []
  syntax:
    content: protected double NextGausian(Random random)
    content.vb: Protected Function NextGausian(random As Random) As Double
    parameters:
    - id: random
      type: System.Random
      description: The random number generator to use.
    return:
      type: System.Double
      description: The next double in the Gaussian distribution.
- uid: Testify.Distribution.NextGausian(System.Random,System.Int32)
  id: NextGausian(System.Random,System.Int32)
  parent: Testify.Distribution
  langs:
  - csharp
  - vb
  name: NextGausian(Random, Int32)
  fullName: Testify.Distribution.NextGausian(System.Random, System.Int32)
  type: Method
  source:
    remote:
      path: src/Testify/Distribution.cs
      branch: feature/documentation
      repo: git@github.com:wekempf/testify.git
    path: src/Testify/Distribution.cs
    startLine: 53
  assemblies:
  - Testify
  namespace: Testify
  summary: Get the next double in the Gaussian distribution.
  example: []
  syntax:
    content: protected double NextGausian(Random random, int sigma)
    content.vb: Protected Function NextGausian(random As Random, sigma As Integer) As Double
    parameters:
    - id: random
      type: System.Random
      description: The random number generator to use.
    - id: sigma
      type: System.Int32
      description: The sigma to use.
    return:
      type: System.Double
      description: The next double in the Gaussian distribution.
references:
- uid: Testify
  isExternal: false
  name: Testify
  fullName: Testify
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Testify.Distribution
  parent: Testify
  isExternal: false
  name: Distribution
  fullName: Testify.Distribution
- uid: System.Random
  parent: System
  isExternal: true
  name: Random
  fullName: System.Random
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
